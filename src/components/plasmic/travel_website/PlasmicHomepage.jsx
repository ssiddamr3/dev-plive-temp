// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: xkqaNLcMhHwTMM8HJRJXkB
// Component: Dk0woNvufsoA
import * as React from "react";
import {
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateStateOnChangeProp,
  generateStateValueProp,
  hasVariant,
  useDollarState
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import YouTube from "@plasmicpkgs/react-youtube";
import Button from "../../Button"; // plasmic-import: OfCINEhuF3JH/component
import TextInput from "../../TextInput"; // plasmic-import: ceesG9FOnQw4/component
import { useScreenVariants as useScreenVariantshVqIihIpHex } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: HVqIIH_IPHex/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic.module.css"; // plasmic-import: xkqaNLcMhHwTMM8HJRJXkB/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: Dk0woNvufsoA/css
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: CqA929yzSMCG/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: 2DyHSnYY7tNr/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: IVI85xj0rumo/icon
import Icon28Icon from "./icons/PlasmicIcon__Icon28"; // plasmic-import: pzQIzXQ_eiLB/icon
import stephanieHarveyOtUahHcqs0YUnsplash1JpgJZllBCho3N7X from "./images/stephanieHarveyOtUahHcqs0YUnsplash1Jpg.jpg"; // plasmic-import: JZllBCho3N7x/picture
import spaJpg1VviTdyjCgm from "./images/spaJpg.jpg"; // plasmic-import: 1VviTdyjCGM_/picture
import krystalNgDoppEkJjIbcUnsplashJpgA08DpXsHvFzJ from "./images/krystalNgDoppEkJjIbcUnsplashJpg.jpg"; // plasmic-import: A08DPXsHVFzJ/picture
import mjTangonanOe6QLhRHhhsUnsplashJpgVwwdwDayzWiM from "./images/mjTangonanOe6QLhRHhhsUnsplashJpg.jpg"; // plasmic-import: VwwdwDayzWiM/picture
import coconut1JpgGeAIu8386SPi from "./images/coconut1Jpg.jpg"; // plasmic-import: GeAIu8386sPI/picture

createPlasmicElementProxy;

export const PlasmicHomepage__VariantProps = new Array();

export const PlasmicHomepage__ArgProps = new Array();

const $$ = {};

function PlasmicHomepage__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "textInput.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      }
    ],

    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantshVqIihIpHex()
  });
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <Stack__
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"headerMainSection"}
            data-plasmic-override={overrides.headerMainSection}
            className={classNames(projectcss.all, sty.headerMainSection)}
          >
            <div
              data-plasmic-name={"container"}
              data-plasmic-override={overrides.container}
              className={classNames(projectcss.all, sty.container)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"menu"}
                data-plasmic-override={overrides.menu}
                hasGap={true}
                className={classNames(projectcss.all, sty.menu)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"menuBar"}
                  data-plasmic-override={overrides.menuBar}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.menuBar)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___1FpLk)}
                  >
                    <Stack__
                      as={PlasmicLink__}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__aS7A
                      )}
                      platform={"react"}
                    >
                      {false ? (
                        <IconIcon
                          className={classNames(projectcss.all, sty.svg__uT3Sg)}
                          role={"img"}
                        />
                      ) : null}
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__gouc0
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "About"
                          : "P L I V E"}
                      </div>
                      {false ? (
                        <IconIcon
                          className={classNames(projectcss.all, sty.svg__r8Cgh)}
                          role={"img"}
                        />
                      ) : null}
                    </Stack__>
                    <Stack__
                      as={PlasmicLink__}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__djZol
                      )}
                      platform={"react"}
                    >
                      {false ? (
                        <IconIcon
                          className={classNames(projectcss.all, sty.svg__dut3)}
                          role={"img"}
                        />
                      ) : null}
                      <div
                        data-plasmic-name={"events"}
                        data-plasmic-override={overrides.events}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.events
                        )}
                      >
                        {"Events"}
                      </div>
                      {false ? (
                        <IconIcon
                          className={classNames(projectcss.all, sty.svg__nbl7T)}
                          role={"img"}
                        />
                      ) : null}
                    </Stack__>
                    <Stack__
                      as={PlasmicLink__}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link___9AGKs
                      )}
                      platform={"react"}
                    >
                      {false ? (
                        <IconIcon
                          className={classNames(projectcss.all, sty.svg__l9U77)}
                          role={"img"}
                        />
                      ) : null}
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__iqRhz
                        )}
                      >
                        {"Facilities"}
                      </div>
                      {false ? (
                        <IconIcon
                          className={classNames(projectcss.all, sty.svg__ctoxp)}
                          role={"img"}
                        />
                      ) : null}
                    </Stack__>
                    <Stack__
                      as={PlasmicLink__}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__hYSc
                      )}
                      platform={"react"}
                    >
                      {false ? (
                        <IconIcon
                          className={classNames(projectcss.all, sty.svg__lEHsj)}
                          role={"img"}
                        />
                      ) : null}
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__eHvbC
                        )}
                      >
                        {"Community"}
                      </div>
                      {false ? (
                        <IconIcon
                          className={classNames(projectcss.all, sty.svg__pzn9Q)}
                          role={"img"}
                        />
                      ) : null}
                    </Stack__>
                    <Stack__
                      as={PlasmicLink__}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__h6T3H
                      )}
                      platform={"react"}
                    >
                      {false ? (
                        <IconIcon
                          className={classNames(projectcss.all, sty.svg__lb73I)}
                          role={"img"}
                        />
                      ) : null}
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__kahS2
                        )}
                      >
                        {"Marketplace"}
                      </div>
                      {false ? (
                        <IconIcon
                          className={classNames(projectcss.all, sty.svg__c9WFu)}
                          role={"img"}
                        />
                      ) : null}
                    </Stack__>
                    <Stack__
                      as={PlasmicLink__}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__pQsgf
                      )}
                      platform={"react"}
                    >
                      {false ? (
                        <IconIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___3FZ15
                          )}
                          role={"img"}
                        />
                      ) : null}
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__mfojC
                        )}
                      >
                        {"About"}
                      </div>
                      {false ? (
                        <IconIcon
                          className={classNames(projectcss.all, sty.svg__lkMuB)}
                          role={"img"}
                        />
                      ) : null}
                    </Stack__>
                  </Stack__>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__vw5Q5)}
              >
                <div className={classNames(projectcss.all, sty.columns__yk1Or)}>
                  <div
                    className={classNames(projectcss.all, sty.column__p8U9R)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__ypGet)}
                    >
                      <h1
                        data-plasmic-name={"h1"}
                        data-plasmic-override={overrides.h1}
                        className={classNames(
                          projectcss.all,
                          projectcss.h1,
                          projectcss.__wab_text,
                          sty.h1
                        )}
                      >
                        {
                          "Discover Sports Events, Book Facilities, Join Communities, Shop Gear"
                        }
                      </h1>
                    </Stack__>
                  </div>
                </div>
              </Stack__>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__vcYzd)}>
            <div
              data-plasmic-name={"section1"}
              data-plasmic-override={overrides.section1}
              className={classNames(projectcss.all, sty.section1)}
            >
              <div className={classNames(projectcss.all, sty.columns__ksFcm)}>
                <div className={classNames(projectcss.all, sty.column__jKlGq)}>
                  <YouTube
                    data-plasmic-name={"youTube"}
                    data-plasmic-override={overrides.youTube}
                    className={classNames("__wab_instance", sty.youTube)}
                    videoId={"R6MeLqRQzYw"}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__whpr)}>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"rowContainer8"}
                    data-plasmic-override={overrides.rowContainer8}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.rowContainer8)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__zt3Ko
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "About our hotel"
                        : "About our resort"}
                    </h2>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ahnBz
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                        : "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."}
                    </div>
                  </Stack__>
                </div>
              </div>
            </div>
          </div>
          <div
            data-plasmic-name={"brownColorBg"}
            data-plasmic-override={overrides.brownColorBg}
            className={classNames(projectcss.all, sty.brownColorBg)}
          >
            <div
              data-plasmic-name={"section12"}
              data-plasmic-override={overrides.section12}
              className={classNames(projectcss.all, sty.section12)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__dRzUv)}>
                <div
                  data-plasmic-name={"rowContainer3"}
                  data-plasmic-override={overrides.rowContainer3}
                  className={classNames(projectcss.all, sty.rowContainer3)}
                >
                  <div
                    className={classNames(projectcss.all, sty.columns___35O7I)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__wLync)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__vDOvd)}
                        displayHeight={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "230px"
                            : "415px"
                        }
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"100%"}
                        loading={"lazy"}
                        src={{
                          src: stephanieHarveyOtUahHcqs0YUnsplash1JpgJZllBCho3N7X,
                          fullWidth: 640,
                          fullHeight: 853,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__eolNt)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___7ZmAk
                        )}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__zzDoB
                          )}
                        >
                          {"Perfect trip"}
                        </h2>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__lwFsu
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ."
                            : "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ."}
                        </div>
                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.button__bljiv
                          )}
                          color={"softBlue"}
                          submitsForm={true}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__xR52W
                            )}
                          >
                            {"Our Room"}
                          </div>
                        </Button>
                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.button__ne9Wa
                          )}
                          color={"sand"}
                          link={"#"}
                          submitsForm={true}
                        >
                          {"View our rooms"}
                        </Button>
                      </Stack__>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div
              data-plasmic-name={"section13"}
              data-plasmic-override={overrides.section13}
              className={classNames(projectcss.all, sty.section13)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__ohvoU)}>
                <div
                  data-plasmic-name={"rowContainer9"}
                  data-plasmic-override={overrides.rowContainer9}
                  className={classNames(projectcss.all, sty.rowContainer9)}
                >
                  <div
                    className={classNames(projectcss.all, sty.columns__tx3Uu)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column___1NKkH)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__by3Yu)}
                        displayHeight={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "230px"
                            : "415px"
                        }
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"100%"}
                        loading={"lazy"}
                        src={{
                          src: spaJpg1VviTdyjCgm,
                          fullWidth: 800,
                          fullHeight: 1200,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__wqsQr)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___9D7Zg
                        )}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__bDWnO
                          )}
                        >
                          {"Best rooms"}
                        </h2>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__vfM47
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ."
                            : "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ."}
                        </div>
                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.button__flPon
                          )}
                          color={"sand"}
                          link={"#"}
                          submitsForm={true}
                        >
                          {"View our rooms"}
                        </Button>
                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.button__bIuwj
                          )}
                          color={"softBlue"}
                          submitsForm={true}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__wKasc
                            )}
                          >
                            {"Our Room"}
                          </div>
                        </Button>
                      </Stack__>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div
              data-plasmic-name={"section14"}
              data-plasmic-override={overrides.section14}
              className={classNames(projectcss.all, sty.section14)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__cfvNm)}>
                <div
                  data-plasmic-name={"rowContainer10"}
                  data-plasmic-override={overrides.rowContainer10}
                  className={classNames(projectcss.all, sty.rowContainer10)}
                >
                  <div
                    className={classNames(projectcss.all, sty.columns__f2QJh)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__gtsTk)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__uywMt)}
                        displayHeight={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "230px"
                            : "415px"
                        }
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"100%"}
                        loading={"lazy"}
                        src={{
                          src: krystalNgDoppEkJjIbcUnsplashJpgA08DpXsHvFzJ,
                          fullWidth: 2730,
                          fullHeight: 4096,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__rdP7E)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__wrzgQ
                        )}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__hcTds
                          )}
                        >
                          {"Food service"}
                        </h2>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__qCoKk
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ."
                            : "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ."}
                        </div>
                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.button___12TnY
                          )}
                          color={"sand"}
                          link={"#"}
                          submitsForm={true}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__buOlm
                            )}
                          >
                            {"View our rooms"}
                          </div>
                        </Button>
                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.button__vWx0
                          )}
                          color={"softBlue"}
                          submitsForm={true}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__lgfls
                            )}
                          >
                            {"Our Room"}
                          </div>
                        </Button>
                      </Stack__>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__qeGo)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__gWzWb)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__jAfB4)}
              >
                <div className={classNames(projectcss.all, sty.column__x4BQd)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__hOOc2)}
                    displayHeight={"434px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "none"
                        : "100%"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: mjTangonanOe6QLhRHhhsUnsplashJpgVwwdwDayzWiM,
                      fullWidth: 2734,
                      fullHeight: 4096,
                      aspectRatio: undefined
                    }}
                  />

                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__dob9Z
                    )}
                  >
                    {"Discover new adventures."}
                  </h2>
                </div>
                <div className={classNames(projectcss.all, sty.column__ae3Qa)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__pKnu6)}
                    displayHeight={"434px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "none"
                        : "100%"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: coconut1JpgGeAIu8386SPi,
                      fullWidth: 800,
                      fullHeight: 1200,
                      aspectRatio: undefined
                    }}
                  />

                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__aBzeV
                    )}
                  >
                    {"Luxurious service."}
                  </h2>
                </div>
              </Stack__>
            </Stack__>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox___9N4QO)}>
            <div className={classNames(projectcss.all, sty.columns__xylz)}>
              <div className={classNames(projectcss.all, sty.column__xcFj)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__mKreL)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__cmhpg
                    )}
                  >
                    {"Stay posted on special offers and promos"}
                  </h2>
                  <TextInput
                    data-plasmic-name={"textInput"}
                    data-plasmic-override={overrides.textInput}
                    className={classNames("__wab_instance", sty.textInput)}
                    onChange={(...eventArgs) => {
                      generateStateOnChangeProp($state, ["textInput", "value"])(
                        (e => e.target?.value).apply(null, eventArgs)
                      );
                    }}
                    placeholder={"Email  Address"}
                    value={
                      generateStateValueProp($state, ["textInput", "value"]) ??
                      ""
                    }
                  />

                  <Button
                    className={classNames("__wab_instance", sty.button__qq0VA)}
                    color={"sand"}
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__smNyQ
                      )}
                    >
                      {"Submit"}
                    </div>
                  </Button>
                </Stack__>
              </div>
              <div className={classNames(projectcss.all, sty.column__uzKdz)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__myKwn)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__hdnqp
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "Contact us"
                      : "Contact us"}
                  </h2>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__t26Rw
                    )}
                  >
                    {"2478 Lorem Ipsum \nLorem Ipsum , Lorem Ipsum "}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__oJyMj
                    )}
                  >
                    {"P: 555.789.5643"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__w4D0
                    )}
                  >
                    {"E: xyz@yourcompany.com"}
                  </div>
                </Stack__>
              </div>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__evQpE)}>
            <div className={classNames(projectcss.all, sty.freeBox__uu1Sy)}>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__laoCe)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___1B1EN)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___5KChd)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__fpE9Z)}
                    >
                      <PlasmicLink__
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link___3Y9L5
                        )}
                        href={"#"}
                        platform={"react"}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "CONTACT US        CAREERS        PRIVACY        FAQ"
                          : "Contact"}
                      </PlasmicLink__>
                      <PlasmicLink__
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link__wda0Y
                        )}
                        href={"#"}
                        platform={"react"}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "CONTACT US        CAREERS        PRIVACY        FAQ"
                          : "FAQ"}
                      </PlasmicLink__>
                      <PlasmicLink__
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link__zCfun
                        )}
                        href={"#"}
                        platform={"react"}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "CONTACT US        CAREERS        PRIVACY        FAQ"
                          : "About us"}
                      </PlasmicLink__>
                      <PlasmicLink__
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link__emsUp
                        )}
                        href={"#"}
                        platform={"react"}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "CONTACT US        CAREERS        PRIVACY        FAQ"
                          : "Privacy policy"}
                      </PlasmicLink__>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__sqeNn)}
                    >
                      <PlasmicLink__
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link__vi6UQ
                        )}
                        href={"#"}
                        platform={"react"}
                        target={"_blank"}
                      >
                        <Icon3Icon
                          className={classNames(projectcss.all, sty.svg__b5Wsk)}
                          role={"img"}
                        />
                      </PlasmicLink__>
                      <PlasmicLink__
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link___6EKLa
                        )}
                        href={"#"}
                        platform={"react"}
                        target={"_blank"}
                      >
                        <Icon2Icon
                          className={classNames(projectcss.all, sty.svg__tWny5)}
                          role={"img"}
                        />
                      </PlasmicLink__>
                      <PlasmicLink__
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link___9GVe0
                        )}
                        href={"#"}
                        platform={"react"}
                        target={"_blank"}
                      >
                        <Icon28Icon
                          className={classNames(projectcss.all, sty.svg___3Mn)}
                          role={"img"}
                        />
                      </PlasmicLink__>
                    </Stack__>
                    <blockquote
                      data-plasmic-name={"blockquote"}
                      data-plasmic-override={overrides.blockquote}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.blockquote
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>
                          {
                            "\u00a9 Company. All rights reserved. This site proudly built with "
                          }
                        </React.Fragment>
                        {
                          <PlasmicLink__
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              projectcss.plasmic_default__inline,
                              sty.link__gbg0H
                            )}
                            href={"https://www.plasmic.app"}
                            platform={"react"}
                          >
                            {"Plasmic"}
                          </PlasmicLink__>
                        }

                        <React.Fragment>{"."}</React.Fragment>
                      </React.Fragment>
                    </blockquote>
                  </Stack__>
                </Stack__>
              </Stack__>
            </div>
          </div>
        </Stack__>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "headerMainSection",
    "container",
    "menu",
    "menuBar",
    "events",
    "h1",
    "section1",
    "youTube",
    "rowContainer8",
    "brownColorBg",
    "section12",
    "rowContainer3",
    "section13",
    "rowContainer9",
    "section14",
    "rowContainer10",
    "textInput",
    "blockquote"
  ],

  headerMainSection: [
    "headerMainSection",
    "container",
    "menu",
    "menuBar",
    "events",
    "h1"
  ],

  container: ["container", "menu", "menuBar", "events", "h1"],
  menu: ["menu", "menuBar", "events"],
  menuBar: ["menuBar", "events"],
  events: ["events"],
  h1: ["h1"],
  section1: ["section1", "youTube", "rowContainer8"],
  youTube: ["youTube"],
  rowContainer8: ["rowContainer8"],
  brownColorBg: [
    "brownColorBg",
    "section12",
    "rowContainer3",
    "section13",
    "rowContainer9",
    "section14",
    "rowContainer10"
  ],

  section12: ["section12", "rowContainer3"],
  rowContainer3: ["rowContainer3"],
  section13: ["section13", "rowContainer9"],
  rowContainer9: ["rowContainer9"],
  section14: ["section14", "rowContainer10"],
  rowContainer10: ["rowContainer10"],
  textInput: ["textInput"],
  blockquote: ["blockquote"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    headerMainSection: makeNodeComponent("headerMainSection"),
    container: makeNodeComponent("container"),
    menu: makeNodeComponent("menu"),
    menuBar: makeNodeComponent("menuBar"),
    events: makeNodeComponent("events"),
    h1: makeNodeComponent("h1"),
    section1: makeNodeComponent("section1"),
    youTube: makeNodeComponent("youTube"),
    rowContainer8: makeNodeComponent("rowContainer8"),
    brownColorBg: makeNodeComponent("brownColorBg"),
    section12: makeNodeComponent("section12"),
    rowContainer3: makeNodeComponent("rowContainer3"),
    section13: makeNodeComponent("section13"),
    rowContainer9: makeNodeComponent("rowContainer9"),
    section14: makeNodeComponent("section14"),
    rowContainer10: makeNodeComponent("rowContainer10"),
    textInput: makeNodeComponent("textInput"),
    blockquote: makeNodeComponent("blockquote"),
    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
